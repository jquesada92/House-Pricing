"0","#create to dynamically create graph counting values, as use !!as.name so that the tidyverse functions can interpret the inputs as a name. "
"0","graph_values<- function(df,feature){"
"0","  #Aggregate df by feature column calculate % of each value"
"0","  agg_df <- df %>% "
"0","    group_by(!!as.name(feature)) %>%"
"0","    dplyr::summarise(N=n()/nrow(df))"
"0","  #Barplot get most frequent value"
"0","  p <-  agg_df %>% ggplot(aes(x= !!as.name(feature),y=N)) +"
"0","    geom_bar(stat=""identity"") + "
"0","    labs(title=feature)+ coord_flip()"
"0",""
"0","}"
"0",""
"0","p_Mszone <- graph_values(df,""MSZoning"")"
"0","p_Alley<-graph_values(df,""Alley"")"
"0","p_Utilities <- graph_values(df,""Utilities"")"
"0","p_Functional <- graph_values(df,""Functional"")"
"0","p_Fence <- graph_values(df,""Fence"")"
"0","p_Air <- graph_values(df,""CentralAir"")"
"0","p_PavedDrive <- graph_values(df,""PavedDrive"")"
"0","p_KitchenQual <- graph_values(df,""KitchenQual"")"
"0","p_Electrical <- graph_values(df,""Electrical"")"
"0","p_SaleType <- graph_values(df,""SaleType"")"
"0",""
